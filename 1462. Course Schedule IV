class Solution {
public:
    vector<bool> checkIfPrerequisite(int numCourses, vector<vector<int>>& prerequisites, vector<vector<int>>& queries) {
        // Initialize the adjacency matrix for Floyd-Warshall
        vector<vector<bool>> reachable(numCourses, vector<bool>(numCourses, false));

        // Fill initial adjacency matrix based on prerequisites
        for (const auto& prereq : prerequisites) {
            reachable[prereq[0]][prereq[1]] = true;
        }

        // Floyd-Warshall Algorithm: Compute transitive closure
        for (int k = 0; k < numCourses; k++) {
            for (int i = 0; i < numCourses; i++) {
                for (int j = 0; j < numCourses; j++) {
                    reachable[i][j] = reachable[i][j] || (reachable[i][k] && reachable[k][j]);
                }
            }
        }

        // Answer queries using the transitive closure matrix
        vector<bool> result;
        for (const auto& query : queries) {
            result.push_back(reachable[query[0]][query[1]]);
        }

        return result;
    }
};
